{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { parseStandProp } from 'macoolka-ui-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawerPaper: function drawerPaper() {\n      return _objectSpread({}, parseStandProp(theme)({\n        mkShadow: 0,\n        zIndex: 1,\n        mkPosition: 'fixed',\n        mkPositionAlign: 'left',\n        mkBorder: \"none\",\n        flexShrink: 0,\n        mkWidth: 'nav',\n        mkScrollBar: \"none\",\n        paddingTop: theme.box.height.bar_large,\n        mkMedia: [{}, {\n          mkHeight: 'fullScreen',\n          mkShadow: 4,\n          mkZIndex: \"drawer\"\n        }, {\n          //   left: \"auto\",\n          mkHeight: \"fullScreen\",\n          //  mkZIndex: \"drawer\",\n          transform: \"translate3d(\".concat(theme.box.width.nav, \"px, 0, 0)\"),\n          transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n          mkTextAlign: \"left\",\n          borderTop: \"none\",\n          mkPaddingH: \"none\"\n        }]\n      }));\n    },\n    drawerPaperRTL: _objectSpread({}, parseStandProp(theme)({\n      mkMedia: [{}, {\n        left: \"auto !important\",\n        right: \"0 !important\"\n      }, {\n        left: \"0  !important\",\n        right: \"auto !important\"\n      }]\n    })),\n    hideOnlyXl: _objectSpread({}, parseStandProp(theme)({\n      mkMedia: [{}, {}, {\n        mkVisible: \"visible\"\n      }, {\n        mkVisible: \"none\"\n      }]\n    })),\n    showOnlyxl: _objectSpread({}, parseStandProp(theme)({\n      mkMedia: [{}, {}, {\n        mkVisible: \"none\"\n      }, {\n        mkVisible: \"visible\"\n      }]\n    }))\n  };\n});\n\nvar Sidebar = function Sidebar(_ref) {\n  var _ref$rtlActive = _ref.rtlActive,\n      rtlActive = _ref$rtlActive === void 0 ? false : _ref$rtlActive,\n      open = _ref.open,\n      children = _ref.children,\n      handleDrawerToggle = _ref.handleDrawerToggle;\n  var classes = useStyles();\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.hideOnlyXl\n  }, __jsx(Drawer, {\n    variant: \"temporary\",\n    anchor: rtlActive ? \"left\" : \"right\",\n    open: open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, rtlActive))\n    },\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    }\n  }, children)), __jsx(\"div\", {\n    className: classes.showOnlyxl\n  }, __jsx(Drawer, {\n    anchor: rtlActive ? \"left\" : \"right\",\n    variant: \"permanent\",\n    open: open,\n    classes: {\n      paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, rtlActive))\n    }\n  }, children)));\n};\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}