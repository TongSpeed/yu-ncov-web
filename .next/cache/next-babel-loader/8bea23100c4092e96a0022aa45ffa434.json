{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useNewsQuery } from '../generated/hook/news.generated';\nimport { NewsModel } from './model';\nimport newsCard from './newsCard';\nexport const rumors = variable => ({\n  _type: 'row',\n  model: NewsModel,\n  query: {\n    useQuery: useNewsQuery,\n    queryName: \"news\",\n    infiniteScroll: true,\n    variable\n  },\n  title: {\n    items: [{\n      _type: 'field',\n      field: \"疫情新闻\"\n    }]\n  },\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  isList: true,\n  transform: as => {\n    return as;\n  },\n  items: _objectSpread({}, newsCard, {\n    grid: {\n      xs: 12,\n      sm: 12,\n      md: 6\n    }\n  })\n});\nexport default rumors;","map":null,"metadata":{},"sourceType":"module"}