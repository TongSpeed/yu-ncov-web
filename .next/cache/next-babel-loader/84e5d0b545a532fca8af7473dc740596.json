{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport Hiddren from '@material-ui/core/Hidden';\nimport React from \"react\";\nimport Table from \"../dashboard/Table/Table\";\nimport { getTFieldValue } from '../helper/modelHelper';\nvar hiddenProps = [{\n  only: ['lg', 'sm', 'md', 'xl']\n}, {\n  only: ['xs', 'md', 'lg', 'xl']\n}, {\n  only: ['xs', 'sm', 'lg',, 'xl']\n}, {\n  only: ['xs', 'sm', 'md']\n}];\nexport var TableList = function TableList(_ref) {\n  var value = _ref.value,\n      _ref$model = _ref.model,\n      _ref$model$color = _ref$model.color,\n      color = _ref$model$color === void 0 ? \"primary\" : _ref$model$color,\n      model = _ref$model.model,\n      names = _ref$model.names;\n  var titles = names.map(function (as) {\n    return as.map(function (a) {\n      return getTFieldValue(model)(value)({\n        field: a,\n        type: 'label'\n      });\n    });\n  });\n  var values = names.map(function (as) {\n    return value.map(function (v) {\n      return as.map(function (a) {\n        return getTFieldValue(model)(v)({\n          field: a,\n          type: 'value'\n        });\n      });\n    });\n  });\n  return __jsx(React.Fragment, null, values.map(function (value, i) {\n    return __jsx(Hiddren, _extends({}, hiddenProps[i], {\n      key: i\n    }), __jsx(Table, {\n      tableHeaderColor: color,\n      tableHead: titles[i],\n      tableData: value\n    }));\n  }));\n};\nexport default TableList;","map":null,"metadata":{},"sourceType":"module"}