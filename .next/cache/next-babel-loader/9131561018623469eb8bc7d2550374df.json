{"ast":null,"code":"import { defaultValue, standChinaTable, standTable } from './helper';\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport * as A from 'fp-ts/lib/Array';\nimport { pipe } from 'fp-ts/lib/pipeable';\nimport * as O from 'fp-ts/lib/Option';\nimport { BasicRecord } from './model';\nimport { formatDateTime } from '../helper/typeHelper';\n\nconst keys = (isCountry = true) => [{\n  name: 'confirmedCount',\n  color: 'danger'\n}, ...(isCountry ? [{\n  name: 'suspectedCount',\n  color: 'warning'\n}] : []), {\n  name: 'deadCount',\n  color: 'primary'\n}, {\n  name: 'curedCount',\n  color: 'info'\n}];\n\nconst keysAdd = (isCountry = true) => [{\n  name: 'confirmedCountAdd',\n  color: 'danger'\n}, ...(isCountry ? [{\n  name: 'suspectedCountAdd',\n  color: 'warning'\n}] : []), {\n  name: 'deadCountAdd',\n  color: 'primary'\n}, {\n  name: 'curedCountAdd',\n  color: 'info'\n}];\n\nconst keysAddRate = (isCountry = true) => [{\n  name: 'confirmedCountAddRate',\n  color: 'danger'\n}, ...(isCountry ? [{\n  name: 'suspectedCountAddRate',\n  color: 'warning'\n}] : []), {\n  name: 'deadCountAddRate',\n  color: 'primary'\n}, {\n  name: 'curedCountAddRate',\n  color: 'info'\n}];\n\nexport const keyCard = ({\n  name,\n  color\n}) => ({\n  _type: 'keycard',\n  grid: {\n    xs: 12,\n    sm: 6,\n    md: 3\n  },\n  HeadIcon: Accessibility,\n  title: {\n    items: [{\n      _type: 'field',\n      field: {\n        field: name,\n        type: 'label'\n      }\n    }]\n  },\n  subTitle: {\n    items: [{\n      _type: 'field',\n      field: {\n        field: name,\n        type: 'value'\n      }\n    }]\n  },\n  footer: {\n    items: {\n      _type: 'field',\n      field: a => `比昨日 增加数量:${a[name + 'Add']}`,\n      type: 'paragraph'\n    }\n  },\n  color\n}); //增加比率:${a[name + 'AddRate']\n\nexport const chart = ({\n  name,\n  color\n}) => ({\n  _type: 'card',\n  model: BasicRecord,\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 6\n  },\n  title: {\n    items: [{\n      _type: 'field',\n      field: {\n        field: name,\n        type: 'label'\n      }\n    }]\n  },\n  color,\n  cardType: 'media',\n  subTitle: {\n    items: [{\n      _type: 'field',\n      field: _ => \"疫情趋势图\"\n    }]\n  },\n  items: {\n    model: BasicRecord,\n    _type: 'chart',\n    lableName: 'recordAt',\n    valueNames: [name],\n    hideLabels: [true, true, false, false]\n  }\n});\nexport const template = (type, model, getData) => [{\n  _type: 'row',\n  title: {\n    items: [{\n      _type: 'field',\n      field: '关键指标'\n    }]\n  },\n  divider: 'down',\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  transform: as => {\n    as = getData ? getData(as) : as;\n    return pipe(as, A.reverse, A.head, O.getOrElse(() => defaultValue));\n  },\n  items: keys(type === 'country').map(keyCard)\n}, {\n  _type: 'row',\n  title: {\n    items: [{\n      _type: 'field',\n      field: '疫情标准统计图'\n    }]\n  },\n  divider: 'down',\n  transform: as => {\n    as = getData ? getData(as) : as;\n    return pipe(as, A.reverse, as => as.slice(0, 14), A.reverse);\n  },\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  items: keys(type === 'country').map(chart)\n}, {\n  _type: 'row',\n  title: {\n    items: [{\n      _type: 'field',\n      field: '疫情增量统计图'\n    }]\n  },\n  divider: 'down',\n  transform: as => {\n    as = getData ? getData(as) : as;\n    return pipe(as, A.reverse, as => as.slice(0, 14), A.reverse);\n  },\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  items: keysAdd(type === 'country').map(chart)\n}, {\n  _type: 'row',\n  title: {\n    items: [{\n      _type: 'field',\n      field: '疫情增率统计图'\n    }]\n  },\n  divider: 'down',\n  transform: as => {\n    as = getData ? getData(as) : as;\n    return pipe(as, A.reverse, as => as.slice(0, 14), A.reverse);\n  },\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  items: keysAddRate(type === 'country').map(chart)\n}, {\n  _type: 'card',\n  title: {\n    items: [{\n      _type: 'field',\n      field: '疫情数据'\n    }]\n  },\n  transform: as => {\n    as = getData ? getData(as) : as;\n    return as;\n  },\n  subTitle: {\n    items: [{\n      _type: 'field',\n      field: data => data.length > 0 ? formatDateTime()(data[data.length - 1].recordAt) : \"\"\n    }]\n  },\n  divider: 'down',\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  items: {\n    model,\n    _type: 'table',\n    names: type === 'country' ? standChinaTable : standTable\n  }\n}];","map":null,"metadata":{},"sourceType":"module"}