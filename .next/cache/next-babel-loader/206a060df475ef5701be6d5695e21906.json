{"ast":null,"code":"import { queryType } from 'nexus';\nimport { getUserId } from '../utils';\nexport const Query = queryType({\n  definition(t) {\n    t.crud.countryRecords({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.provinceRecords({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.cityRecords({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.rumors({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.news({\n      filtering: true,\n      ordering: true\n    }); // t.crud.news({filtering:true,ordering:true})\n\n    t.crud.countries();\n    t.crud.provinces({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.cities({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.areas({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.virusInfo();\n    t.crud.country();\n    t.crud.provinces({\n      filtering: true,\n      ordering: true\n    });\n    t.crud.city();\n    t.field('me', {\n      type: 'User',\n      nullable: true,\n      resolve: (parent, args, ctx) => {\n        const userId = getUserId(ctx);\n        return ctx.prisma.user.findOne({\n          where: {\n            id: userId\n          }\n        });\n      }\n    });\n  }\n\n});","map":null,"metadata":{},"sourceType":"module"}