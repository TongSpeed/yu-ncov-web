{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query statByCountry($orderBy: CountryRecordOrderByInput = {recordAt: desc}, $from: DateTime, $to: DateTime, $country: [String!]) {\\n  countryRecords(orderBy: $orderBy, where: {recordAt: {gte: $from, lte: $to}, country: {cuid: {in: $country}, NOT: {id: {contains: \\\"\\uFFFD\\\"}}}}) {\\n    country {\\n      id\\n      title\\n      cuid\\n    }\\n    curedCount\\n    recordAt\\n    deadCount\\n    suspectedCount\\n    confirmedCount\\n    continents\\n  }\\n}\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// eslint-disable\n// ⚠️ DO NOT EDIT ⚠️\n// This file is automatically generated, run yarn run graphql:codegen to update\nimport gql from 'graphql-tag';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport var StatByCountryDocument = gql(_templateObject());\n/**\n * __useStatByCountryQuery__\n *\n * To run a query within a React component, call `useStatByCountryQuery` and pass it any options that fit your needs.\n * When your component renders, `useStatByCountryQuery` returns an object from Apollo Client that contains loading, error, and data properties \n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useStatByCountryQuery({\n *   variables: {\n *      orderBy: // value for 'orderBy'\n *      from: // value for 'from'\n *      to: // value for 'to'\n *      country: // value for 'country'\n *   },\n * });\n */\n\nexport function useStatByCountryQuery(baseOptions) {\n  return ApolloReactHooks.useQuery(StatByCountryDocument, baseOptions);\n}\nexport function useStatByCountryLazyQuery(baseOptions) {\n  return ApolloReactHooks.useLazyQuery(StatByCountryDocument, baseOptions);\n}","map":null,"metadata":{},"sourceType":"module"}