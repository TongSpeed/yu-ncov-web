{"ast":null,"code":"import { loadScript, loadCSS } from 'macoolka-ui-core/lib/utils';\nexport async function registerServiceWorker() {\n  if ('serviceWorker' in navigator && true && window.location.host.indexOf('material-ui.com') <= 0) {\n    // register() automatically attempts to refresh the sw.js.\n    const registration = await navigator.serviceWorker.register('/sw.js'); // Force the page reload for users.\n\n    forcePageReload(registration);\n  }\n} // Inspired by\n// https://developers.google.com/web/tools/workbox/guides/advanced-recipes#offer_a_page_reload_for_users\n\nfunction forcePageReload(registration) {\n  if (!navigator.serviceWorker.controller) {\n    // The window client isn't currently controlled so it's a new service\n    // worker that will activate immediately.\n    return;\n  }\n\n  if (registration.waiting) {\n    // SW is waiting to activate. Can occur if multiple clients open and\n    // one of the clients is refreshed.\n    registration.waiting.postMessage('skipWaiting');\n    return;\n  }\n\n  function listenInstalledStateChange() {\n    registration.installing.addEventListener('statechange', event => {\n      if (event.target.state === 'installed' && registration.waiting) {\n        // A new service worker is available, inform the user\n        registration.waiting.postMessage('skipWaiting');\n      } else if (event.target.state === 'activated') {\n        // Force the control of the page by the activated service worker.\n        window.location.reload();\n      }\n    });\n  }\n\n  if (registration.installing) {\n    listenInstalledStateChange();\n    return;\n  } // We are currently controlled so a new SW may be found...\n  // Add a listener in case a new SW is found,\n\n\n  registration.addEventListener('updatefound', listenInstalledStateChange);\n}\n\nexport function loadDependencies(r) {\n  Object.keys(r.loadJavscript).map(a => {\n    loadScript(a, document.querySelector(r.loadJavscript[a]));\n  });\n  Object.keys(r.loadJavscript).map(a => {\n    loadCSS(a, document.querySelector(r.loadJavscript[a]));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}