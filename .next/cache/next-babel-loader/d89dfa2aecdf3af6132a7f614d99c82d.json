{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useStatByCityQuery } from '../generated/hook/statByCity.generated';\nimport { toVirusRecords, ordRecordAt, getCountryLink, getProvinceLink, getCityLink, getWorldLink, getLastRecordAtString } from './helper';\nimport * as A from 'fp-ts/lib/Array';\nimport { pipe } from 'fp-ts/lib/pipeable';\nimport * as O from 'fp-ts/lib/Option';\nimport { CityRecord } from './model';\nimport { template } from './common';\nexport var city = function city(variable) {\n  return {\n    _type: 'page',\n    model: CityRecord,\n    query: {\n      useQuery: useStatByCityQuery,\n      queryName: \"cityRecords\",\n      variable: variable\n    },\n    titles: function titles(as) {\n      return pipe(as, A.head, O.map(function (a) {\n        return [getWorldLink(), getCountryLink(a), getProvinceLink(a), getCityLink(a)];\n      }), O.getOrElse(function () {\n        return [];\n      }));\n    },\n    title: {\n      items: [{\n        _type: 'field',\n        field: function field(as) {\n          return getLastRecordAtString(as);\n        }\n      }]\n    },\n    transform: function transform(as) {\n      return pipe(as, A.map(function (a) {\n        return _objectSpread({}, a, {\n          country: a.country.title,\n          province: a.province.title,\n          city: a.city.title,\n          countryId: a.country.cuid,\n          provinceId: a.province.cuid,\n          cityId: a.city.cuid\n        });\n      }), A.sort(ordRecordAt), A.reverse, function (as) {\n        return toVirusRecords(as);\n      }, A.reverse);\n    },\n    items: _toConsumableArray(template(\"city\", CityRecord))\n  };\n};\nexport default city;","map":null,"metadata":{},"sourceType":"module"}