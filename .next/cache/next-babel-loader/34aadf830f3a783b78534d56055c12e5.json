{"ast":null,"code":"import { isString } from 'macoolka-predicate';\nimport * as dateFns from 'date-fns';\nexport var addOneDay = function addOneDay(a) {\n  return dateFns.addDays(new Date(a), 1).toISOString();\n};\nexport var formatDateTime = function formatDateTime() {\n  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"yyyy年MM月dd日 HH:mm\";\n  return function (a) {\n    return dateFns.format(new Date(a), format);\n  };\n};\nexport var formatShortMonthDay = formatDateTime(\"MM.dd\");\nexport var formatDate = formatDateTime(\"yyyy年MM月dd日\");\nexport var getDateFromTo = function getDateFromTo(a) {\n  var cloneValue = new Date(isString(a) ? a : a.toISOString());\n  var b = new Date(cloneValue.setHours(0, 0, 0, 0));\n  return {\n    from: b,\n    to: dateFns.addDays(b, 1)\n  };\n};\nexport var getDateStart = function getDateStart(a) {\n  var cloneValue = new Date(isString(a) ? a : a.toISOString());\n  var b = new Date(cloneValue.setHours(0, 0, 0, 0));\n  return b;\n};\nexport var getDateEnd = function getDateEnd(a) {\n  var cloneValue = new Date(isString(a) ? a : a.toISOString());\n  var b = new Date(cloneValue.setHours(24, 24, 60, 0));\n  return b;\n};\nexport var today = function today() {\n  return {\n    from: getDateStart(new Date()),\n    to: getDateEnd(new Date())\n  };\n};\nexport var today5Day = function today5Day() {\n  return {\n    from: getDateStart(dateFns.addDays(new Date(), -5)),\n    to: getDateStart(dateFns.addDays(new Date(), 1))\n  };\n};","map":null,"metadata":{},"sourceType":"module"}