{"ast":null,"code":"import { verify, sign } from 'jsonwebtoken';\nimport { compare, hash } from 'bcryptjs';\nimport constants from './constants';\nexport function getUserId(context) {\n  const Authorization = context.request.get('Authorization');\n\n  if (Authorization) {\n    const token = Authorization.replace('Bearer ', '');\n    const verifiedToken = verify(token, constants.APP_SECRET);\n    return verifiedToken && verifiedToken.userId;\n  }\n}\nexport const hashPassword = (size = 10) => password => async () => await hash(password, size);\nexport const token = userId => sign({\n  userId\n}, constants.APP_SECRET);\nexport const passwordValid = (password, userPassword) => async () => await compare(password, userPassword);","map":null,"metadata":{},"sourceType":"module"}