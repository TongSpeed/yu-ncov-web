{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { getTFieldValue } from '../helper/modelHelper';\nimport { isString } from 'macoolka-predicate';\nimport Mdx from './Mdx';\n\nconst formatMarkdown = a => {\n  if (isString(a)) {\n    return a.trim().replace('\\n', '\\n\\n');\n  } else {\n    return a;\n  }\n};\n\nconst FieldDisplay = ({\n  model,\n  value,\n  children\n}) => {\n  const {\n    model: _model,\n    field,\n    type\n  } = model;\n  const fieldValue = getTFieldValue(_model)(value)(field);\n\n  switch (type) {\n    case 'markdown':\n      {\n        return __jsx(Mdx, {\n          value: formatMarkdown(fieldValue)\n        });\n      }\n\n    default:\n      {\n        return fieldValue; //isString(fieldValue)?<Element>{fieldValue}</Element>:fieldValue as any\n      }\n  }\n};\n\nexport default FieldDisplay;","map":null,"metadata":{},"sourceType":"module"}