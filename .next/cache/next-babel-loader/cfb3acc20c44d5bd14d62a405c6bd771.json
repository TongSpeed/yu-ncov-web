{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; //import clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from 'macoolka-ui-components/lib/ListItem';\nimport Button from 'macoolka-ui-components/lib/Button';\nimport Collapse from 'macoolka-ui-components/lib/Collapse';\nimport Element from 'macoolka-ui-components/lib/Element';\nimport { useLink } from '../AppContext';\nimport { get } from 'macoolka-object';\nimport { parseStandProp } from 'macoolka-ui-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    item: {\n      display: 'block',\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    itemLeaf: _objectSpread({\n      display: 'flex',\n      paddingTop: 0,\n      paddingBottom: 0,\n      height: \"50px\"\n    }, parseStandProp(theme)({\n      mkMarginH: \"medium\",\n      mkPaddingH: \"medium\",\n      mkPaddingV: \"small\",\n      mkMarginTop: \"small\"\n    }), {}, get(theme, [\"components\", \"NavItem\"], {})),\n    button: {\n      letterSpacing: 0,\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      width: '100%',\n      color: theme.palette.secondary.main\n    },\n    buttonLeaf: {\n      letterSpacing: 0,\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      width: '100%',\n      fontWeight: theme.typography.fontWeightRegular,\n      '&.depth-0': {\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    active: {\n      color: theme.palette.primary.main,\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  };\n});\n\nvar AppDrawerNavItem = function AppDrawerNavItem(_ref) {\n  var children = _ref.children,\n      depth = _ref.depth,\n      data = _ref.data,\n      onClick = _ref.onClick,\n      _ref$openImmediately = _ref.openImmediately,\n      openImmediately = _ref$openImmediately === void 0 ? false : _ref$openImmediately,\n      _ref$topLevel = _ref.topLevel,\n      topLevel = _ref$topLevel === void 0 ? false : _ref$topLevel,\n      other = _objectWithoutProperties(_ref, [\"children\", \"depth\", \"data\", \"onClick\", \"openImmediately\", \"topLevel\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(openImmediately),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    setOpen(function (oldOpen) {\n      return !oldOpen;\n    });\n  };\n\n  var style = {\n    paddingLeft: 8 * (3 + 2 * depth)\n  }; //  const LinkProps = useNavItemLinkProp()(data)\n\n  var Link = useLink();\n  var Icon = data.icon;\n\n  if (data.id) {\n    return __jsx(Link, {\n      href: data.href,\n      as: data.as\n    }, __jsx(ListItem, _extends({\n      component: Button,\n      onClick: onClick,\n      disableTouchRipple: true,\n      className: classes.itemLeaf,\n      disableGutters: true\n    }, other, {\n      button: true,\n      mkTextColor: \"inherit\"\n    }), __jsx(Icon, null), __jsx(Element, {\n      mkMarginLeft: \"medium\",\n      mkTypography: \"subtitle1\"\n    }, data.title)));\n  }\n\n  return __jsx(ListItem, _extends({\n    className: classes.item,\n    disableGutters: true,\n    button: true\n  }, other), __jsx(Button, {\n    classes: {\n      root: classes.button,\n      label: topLevel ? 'algolia-lvl0' : ''\n    },\n    onClick: handleClick,\n    style: style\n  }, data.title), __jsx(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, children));\n};\n\nexport default AppDrawerNavItem;","map":null,"metadata":{},"sourceType":"module"}