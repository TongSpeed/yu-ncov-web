{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useStatByCountryQuery } from '../generated/hook/statByContry.generated';\nimport { getCountryByLastDate, getSumCountry, getLastRecordAtString, getWorldLink, countryTable } from './helper';\nimport { CountryRecord } from './model';\nimport { formatDate } from '../helper/typeHelper';\nimport { template } from './common';\nimport Link from '../components/Link';\nexport const provinces = variable => ({\n  _type: 'page',\n  model: CountryRecord,\n  query: {\n    useQuery: useStatByCountryQuery,\n    queryName: \"countryRecords\",\n    variable\n  },\n  titles: [getWorldLink()],\n  //title: \"世界疫情\",\n  title: {\n    items: [{\n      _type: 'field',\n      field: data => getLastRecordAtString(data.items)\n    }]\n  },\n  // date.current.length > 0 ? `最后更新时间：${formatDate(date.current[0].recordAt)}` : \"\",\n  grid: {\n    xs: 12,\n    sm: 12,\n    md: 12\n  },\n  transform: as => {\n    const values = as.map(a => _objectSpread({}, a, {\n      country: a.country.title,\n      countryId: a.country.cuid\n    }));\n    return {\n      current: getSumCountry(values),\n      items: getCountryByLastDate(values)\n    };\n  },\n  items: [...template(\"world\", CountryRecord, a => a.current), {\n    _type: 'card',\n    title: {\n      items: [{\n        _type: 'field',\n        field: \"各国疫情表\"\n      }]\n    },\n    subTitle: {\n      items: [{\n        _type: 'field',\n        field: date => date.length > 0 ? formatDate(date[0].recordAt) : \"疫情表\"\n      }]\n    },\n    grid: {\n      xs: 12,\n      sm: 12,\n      md: 12\n    },\n    transform: as => {\n      return as.items;\n    },\n    items: {\n      _type: 'table',\n      grid: {\n        xs: 12,\n        sm: 12,\n        md: 12\n      },\n      model: _objectSpread({}, CountryRecord, {\n        fields: CountryRecord.fields.map(a => {\n          if (a.name === 'country') {\n            return _objectSpread({}, a, {\n              formating: value => {\n                const name = value ? value['country'] : 'null';\n                const id = value ? value.countryId : 'null';\n                return __jsx(Link, {\n                  href: `/country/[id]`,\n                  as: `/country/${id}`\n                }, __jsx(\"a\", null, name));\n              }\n            });\n          } else {\n            return a;\n          }\n        })\n      }),\n      names: countryTable\n    }\n  }]\n});\nexport default provinces;","map":null,"metadata":{},"sourceType":"module"}