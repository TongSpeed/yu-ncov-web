{"ast":null,"code":"import { isString } from 'macoolka-predicate';\nimport * as dateFns from 'date-fns';\nexport const addOneDay = a => {\n  return dateFns.addDays(new Date(a), 1).toISOString();\n};\nexport const formatDateTime = (format = \"yyyy年MM月dd日 HH:mm\") => a => {\n  return dateFns.format(new Date(a), format);\n};\nexport const formatShortMonthDay = formatDateTime(\"MM.dd\");\nexport const formatDate = formatDateTime(\"yyyy年MM月dd日\");\nexport const getDateFromTo = a => {\n  const cloneValue = new Date(isString(a) ? a : a.toISOString());\n  const b = new Date(cloneValue.setHours(0, 0, 0, 0));\n  return {\n    from: b,\n    to: dateFns.addDays(b, 1)\n  };\n};\nexport const getDateStart = a => {\n  const cloneValue = new Date(isString(a) ? a : a.toISOString());\n  const b = new Date(cloneValue.setHours(0, 0, 0, 0));\n  return b;\n};\nexport const getDateEnd = a => {\n  const cloneValue = new Date(isString(a) ? a : a.toISOString());\n  const b = new Date(cloneValue.setHours(24, 24, 60, 0));\n  return b;\n};\nexport const today = () => ({\n  from: getDateStart(new Date()),\n  to: getDateEnd(new Date())\n});\nexport const today5Day = () => ({\n  from: getDateStart(dateFns.addDays(new Date(), -5)),\n  to: getDateStart(dateFns.addDays(new Date(), 1))\n});","map":null,"metadata":{},"sourceType":"module"}