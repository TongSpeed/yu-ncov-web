generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model Area {
  cuid  String @default("")
  id    String @id
  tags  String @default("")
  title String @default("")
  city  City
}

model City {
  cuid        String    @unique   @default("")
  id          String       @id
  tags        String       @default("")
  title       String     @unique  @default("")
  province    Province
  areas       Area[]
  cityRecords CityRecord[] @relation(references: [city])
}

model CityRecord {
  confirmedCount Int       @default(0)
  curedCount     Int       @default(0)
  deadCount      Int       @default(0)
  recordAt       DateTime
  sourceUrl      String
  suspectedCount Int       @default(0)
  city           City
  country        Country
  province       Province
  virus          VirusInfo

  id        String   @default(cuid()) @id
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model Country {
  continents      String?
  cuid            String       @unique    @default("")
  id              String           @id
  tags            String           @default("")
  title           String       @unique    @default("")
  cityRecords     CityRecord[]
  countryRecords  CountryRecord[]  @relation(references: [country])
  provinces       Province[]       @relation(references: [country])
  provinceRecords ProvinceRecord[] @relation(references: [country])
}

model CountryRecord {
  confirmedAddCount Int?
  confirmedCount    Int     @default(0)
  continents        String?

  curedAddCount Int?
  curedCount    Int  @default(0)
  deadAddCount  Int?
  deadCount     Int  @default(0)

  recordAt          DateTime
  seriousAddCount   Int?
  seriousCount      Int?
  sourceUrl         String
  suspectedAddCount Int?
  suspectedCount    Int       @default(0)
  country           Country
  virus             VirusInfo
  id                String    @default(cuid()) @id
  updatedAt         DateTime  @default(now())
  createdAt         DateTime  @default(now())
}

model News {
  content    String
  infoSource String   @default("")
  province   String   @default("")
  recordAt   DateTime
  sourceUrl  String   @unique
  subTitle   String?
  title      String

  id        String   @default(cuid()) @id
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model Province {
  cuid            String           @default("")
  id              String           @id
  tags            String           @default("")
  title           String       @unique    @default("")
  country         Country
  cities          City[]
  cityRecords     CityRecord[]
  provinceRecords ProvinceRecord[] @relation(references: [province])
}

model ProvinceRecord {
  confirmedCount Int      @default(0)
  curedCount     Int      @default(0)
  deadCount      Int      @default(0)
  recordAt       DateTime
  sourceUrl      String   @default("")
  suspectedCount Int      @default(0)

  country  Country
  province Province
  virus    VirusInfo

  id        String   @default(cuid()) @id
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model Rumor {
  content   String
  recordAt  DateTime
  subTitle  String
  title     String   @unique
  id        String   @default(cuid()) @id
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model User {
  avatar Boolean @default(false)

  email String @default("") @unique

  name     String?
  nickname String  @default("")
  password String  @default("")
  role     String  @default("USER")

  id        String   @default(cuid()) @id
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
}

model VirusInfo {
  description     String
  id              String           @id
  title           String        @unique   @default("")
  cityRecords     CityRecord[]
  countryRecords  CountryRecord[]
  provinceRecords ProvinceRecord[]
}